//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logger.Core.Hosting.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Logger.Core.Hosting.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another Instance is already running....
        /// </summary>
        internal static string Bootstrapper_AnotherInstanceIsAlreadyRunning {
            get {
                return ResourceManager.GetString("Bootstrapper_AnotherInstanceIsAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application assembly is required and cannot be null..
        /// </summary>
        internal static string Bootstrapper_ApplicationAssemblyIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationAssemblyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application company is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_ApplicationCompanyIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationCompanyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application copyright is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_ApplicationCopyrightIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationCopyrightIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An application directory is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_ApplicationDirectoryIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationDirectoryIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application icon is required and cannot be null..
        /// </summary>
        internal static string Bootstrapper_ApplicationIconIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationIconIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application instance is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_ApplicationInstanceIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationInstanceIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application name is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_ApplicationNameIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationNameIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application version is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_ApplicationVersionIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_ApplicationVersionIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data directory is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_DataDirectoryIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_DataDirectoryIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OS Version ist not supported..
        /// </summary>
        internal static string Bootstrapper_InvalidOSVersion {
            get {
                return ResourceManager.GetString("Bootstrapper_InvalidOSVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mainwindow is required..
        /// </summary>
        internal static string Bootstrapper_MainWindowInstanceIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_MainWindowInstanceIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary directory is required and cannot be null or empty..
        /// </summary>
        internal static string Bootstrapper_TemporaryDirectoryIsRequired {
            get {
                return ResourceManager.GetString("Bootstrapper_TemporaryDirectoryIsRequired", resourceCulture);
            }
        }
    }
}
